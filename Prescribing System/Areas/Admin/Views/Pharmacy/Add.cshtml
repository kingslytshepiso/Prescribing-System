@model Pharmacy
@{
    ViewData["Title"] = "Add a pharmacy";
    <script>
        var srlProvs = "@(ViewBag.Prov_s)";
        var srlCities = "@ViewBag.City_s";
        var srlSuburbs = "@ViewBag.Suburb_s";
    </script>
}
@section scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
}
<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<form asp-controller="Pharmacy" asp-action="Add" method="post">
    <div class="form-group row">
        <div class="col-8"><label>Name</label></div>
        <div class="col-12">
            <input asp-for="Name" class="form-control" />
        </div>
        <div class="col">
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-8"><label>Contact</label></div>
        <div class="col-12">
            <input asp-for="ContactNo" class="form-control"
                   oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" />
        </div>
        <div class="col">
            <span asp-validation-for="ContactNo" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-8"><label>Email Address</label></div>
        <div class="col-12">
            <input asp-for="EmailAddress" class="form-control" />
        </div>
        <div class="col">
            <span asp-validation-for="EmailAddress" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-8"><label>License Number</label></div>
        <div class="col-12">
            <input asp-for="LicenseNo" class="form-control" />
        </div>
        <div class="col">
            <span asp-validation-for="LicenseNo" class="text-danger"></span>
        </div>
        
    </div>
        <div class="form-group row">
            <div class="form-group col m-0">
                <div class="col-8"><label>Province:</label></div>
                <div class="col-12">
                    <select id="pageProvinceElement"
                        asp-items="@(new SelectList(ViewBag.Provinces, "ProvID",
                                        "Name"))"
                        class="form-control">
                    </select>
                </div>
            </div>
            <div class="form-group col">
                <div class="col-8"><label>City:</label></div>
                <div class="col-12">
                    <select id="pageCityElement"
                        asp-items="@(new SelectList(ViewBag.Cities, "CityID",
                                        "Name"))"
                        class="form-control">
                    </select>
                </div>
            </div>
        </div>
        <div class="form-group row">
            <div class="form-group col">
                <div class="col-8"><label>Suburb:</label></div>
                <div class="col-12">
                    <select id="pageSuburbElement" asp-for="SuburbId"
                        asp-items="@(new SelectList(ViewBag.Suburbs, "SuburbID",
                                        "Name"))"
                        class="form-control">
                    </select>
                </div>
            </div>
            <div class="form-group col">
                <div class="col-8"><label>Address Line 1:</label></div>
                <div class="col-12">
                    <input asp-for="AddressLine1" class="form-control" />
                </div>
                <div class="col">
                    <span asp-validation-for="AddressLine1"
                      class="text-danger"></span>
                </div>
            </div>
        </div>
        <div class="form-group row">
            <div class="form-group col">
                <div class="col-8"><label>Pharmacist</label></div>
                <div class="col-12">
                    <select asp-for="PharmacistID"
                        class="form-control">
                        <option> </option>
                        @foreach(PharmacistUser p in ViewBag.Pharmacists){
                            <option value="@p.PharmacistId">@(p.FirstName + " " + p.LastName)</option>
                        }
                    </select>
                </div>
                <div class="col">
                    <span asp-validation-for="PharmacistID" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group col">
                <div class="col-8"><label>Address Line 2:</label></div>
                <div class="col-12">
                    <input asp-for="Addressline2" class="form-control" />
                </div>
                <div class="col">
                    <span asp-validation-for="Addressline2"
                      class="text-danger"></span>
                </div>
            </div>
        </div>
        <script>
            var thisProvinces = document.getElementById('pageProvinceElement');
            var thisCities = document.getElementById('pageCityElement');
            var thisSuburbs = document.getElementById('pageSuburbElement');
            if(typeof srlProvs !== "undefined"){
                const allProvs = JSON.parse(srlProvs.replace(/&quot;/g, '"'));
                const allCities = JSON.parse(srlCities.replace(/&quot;/g, '"'));
                const allSuburbs = JSON.parse(srlSuburbs.replace(/&quot;/g, '"'));
                thisCities.innerHTML = "";
                for (var i = 0; i < allCities.length; i++) {
                    var obj = allCities[i];
                    let selectedProvince = thisProvinces.options[thisProvinces.selectedIndex].value;
                    if (selectedProvince == obj["ProvID"]) {
                        let newOption = new Option(obj["Name"], obj["CityID"]);
                        thisCities.add(newOption, undefined);
                    }
                }
                thisSuburbs.innerHTML = "";
                for (var i = 0; i < allSuburbs.length; i++) {
                    var obj = allSuburbs[i];
                    let selectedCity = thisCities.options[thisCities.selectedIndex].value;
                    if (selectedCity == obj["CityID"]) {
                        let newOption = new Option(obj["Name"], obj["SuburbID"]);
                        thisSuburbs.add(newOption, undefined);
                    }
                }
                if (thisProvinces) {
                    thisProvinces.addEventListener("change", function () {
                        thisCities.innerHTML = "";
                        for (var i = 0; i < allCities.length; i++) {
                            var obj = allCities[i];
                            let selectedProvince = thisProvinces.options[thisProvinces.selectedIndex].value;
                            if (selectedProvince == obj["ProvID"]) {
                                let newOption = new Option(obj["Name"], obj["CityID"]);
                                thisCities.add(newOption, undefined);
                            }
                        }
                        thisSuburbs.innerHTML = "";
                        for (var i = 0; i < allSuburbs.length; i++) {
                            var obj = allSuburbs[i];
                            let selectedCity = thisCities.options[thisCities.selectedIndex].value;
                            if (selectedCity == obj["CityID"]) {
                                let newOption = new Option(obj["Name"], obj["SuburbID"]);
                                thisSuburbs.add(newOption, undefined);
                            }
                        }
                    })
                }
                if (thisCities) {
                    console.log("prov defined");
                    thisCities.addEventListener("change", function () {
                        thisSuburbs.innerHTML = "";
                        for (var i = 0; i < allSuburbs.length; i++) {
                            var obj = allSuburbs[i];
                            let selectedCity = thisCities.options[thisCities.selectedIndex].value;
                            console.log(selectedCity);
                            if (selectedCity == obj["CityID"]) {
                                let newOption = new Option(obj["Name"], obj["SuburbID"]);
                                thisSuburbs.add(newOption, undefined);
                            }
                        }
                    });
                }
            }
        </script>
    <div class="form-group row">
        <div class="col">
            <button type="button" onclick="history.back()" class="btn btn-secondary">Cancel</button>
        </div>
        <div class="col">
            <div class="box-items-from-right">
                <button type="submit" class="btn btn-primary">Add</button>
            </div>
        </div>
    </div>
</form>

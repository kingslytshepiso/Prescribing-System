@model PatientViewModel
@{
    ViewData["Title"] = "My Prescription";
}
@if (!(Model.Prescriptions.Count > 0))
{
    <div>
        <h4 class="text-info">
            There is no prescription that is loaded on the system
        </h4>
    </div>
}
else
{
    var doctor = new DoctorUser();
    var medPrac = new object();
    <div class="box-columned box-spaced-between">
        <div class="">
            @*<a asp-controller="MedicationInteraction" asp-action="Add"
           class="btn btn-primary">Add</a>*@
        </div>
        <div class="">
            <button type="button" class="btn btn-primary dropdown-toggle"
                id="sortDropdownBtn" data-toggle="dropdown"
                aria-expanded="false">
                Sort by
            </button>
            <ul class="dropdown-menu" aria-labelledby="sortDropdownBtn">
                <li class="dropdown-item">
                    <a asp-controller="Prescription" asp-action="Index" asp-route-sortBy="none">
                        -----
                    </a>
                </li>
                <li class="dropdown-item">
                    <a asp-controller="Prescription" asp-action="Index" asp-route-sortBy="dateasc">
                        Date(Older)
                    </a>
                </li>
                <li class="dropdown-item">
                    <a asp-controller="Prescription" asp-action="Index" asp-route-sortBy="datedesc">
                        Date(Newest)
                    </a>
                </li>
                <li class="dropdown-item">
                    <a asp-controller="Prescription" asp-action="Index" asp-route-sortBy="doctor">
                        Doctor
                    </a>
                </li>
                <li class="dropdown-item">
                    <a asp-controller="Prescription" asp-action="Index" asp-route-sortBy="status">
                        Status
                    </a>
                </li>
            </ul>
        </div>
    </div>
    @foreach (Prescription p in Model.Prescriptions)
    {
        doctor = Model.GetDoctor(p.DoctorID);
        medPrac = Model.GetPractice(doctor.MedPracId);//to be changed to a medprac class
        <div class="prescription-box">
            <div class="box-columned justify-content-between prescription-header-details ">
                <div class="prescription-header-details">
                    <p>Date: @p.Date.ToShortDateString()</p>
                    <p>Doctor: @p.DoctorName </p>
                    <p>Status: @p.Status</p>
                </div>
                <div class="prescription-header-img">
                    <img src="~/icons/hospital.png"
                 alt="practice image" title="practice" />
                </div>
            </div>
            <div class="prescription-body">
                @{
                    var lines = Model.GetPrescriptionLines(p.PrescriptionID);
                }
                @if (!(lines.Count > 0))
                {
                    <div>
                        <h4 class="text-info">
                            Prescription line is empty
                        </h4>
                    </div>
                }
                else
                {
                    <div class="form-group row">
                        <div class="col">
                            <button type="button" onclick="history.back()" class="btn">Cancel</button>
                        </div>
                        <div class="col">
                            <div class="box-items-from-right">
                                <a asp-controller="Prescription" asp-action="Lines" asp-route-prescId="@p.PrescriptionID" class="btn btn-primary">View</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="prescription-footer">
            </div>
        </div>
        <hr />
    }
}
